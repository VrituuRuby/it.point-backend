// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:docker@it.point-database:5432/it.point"
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
  PENDING
  SCHEDULED
}

enum Role {
  ADMIN
  USER
  SERVICE
}

model User {
  id        String   @id @default(uuid())
  name      String
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(USER)
  branch_id String?
  branch    Branch?  @relation(fields: [branch_id], references: [id])
  tickets   Ticket[]
  notes     Note[]

  @@map("users")
}

model Branch {
  id     String   @id @default(uuid())
  users  User[]
  name   String
  Ticket Ticket[]

  @@map("branches")
}

model Ticket {
  id             Int         @id @default(autoincrement())
  status         Status      @default(OPEN)
  user           User        @relation(fields: [user_id], references: [id])
  branch         Branch?     @relation(fields: [branch_id], references: [id])
  branch_id      String?
  email          String?
  user_id        String
  title          String
  description    String
  phone          String
  category       Category    @relation(fields: [category_id], references: [id], onDelete: Cascade) 
  category_id    String
  subcategory    SubCategory @relation(fields: [subcategory_id], references: [id], onDelete: Cascade)
  subcategory_id String
  created_at     DateTime    @default(now())
  updated_at     DateTime?
  notes          Note[]

  @@map("tickets")
}

model Note {
  id          String   @id @default(uuid())
  user_id     String
  user        User     @relation(fields: [user_id], references: [id])
  status      Status
  ticket      Ticket   @relation(fields: [ticket_id], references: [id])
  description String
  isPublic    Boolean  @default(true)
  created_at  DateTime @default(now())
  ticket_id   Int

  @@map("notes")
}

model Category {
  id            String        @id @default(uuid())
  name          String
  tickets       Ticket[]
  subcategories SubCategory[]

  @@map("categories")
}

model SubCategory {
  id          String   @id @default(uuid())
  name        String
  category_id String
  tickets     Ticket[]
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@map("sub_categories")
}
